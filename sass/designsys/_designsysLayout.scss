@import "designsysColors";
@import "designsysUtilities";

.parallax-main {
    position: relative;
    // top: 0;
    // left: 0;
    height: 100vh;
    overflow-x: hidden;
    overflow-y: scroll;
}

.ds-grid-borderL {
    border-left-width: 1px;
    border-left-style: solid; 
}

.ds-grid-borderR {
    border-right-width: 1px;
    border-right-style: solid;
}

.ds-grid-border {
    @extend .ds-grid-borderR;
    @extend .ds-grid-borderL;
}

%purpleGradientBG {
    background: url('/public/theme_assets/ds-gradient-bg.svg') center center fixed;
    background-size: cover;
}
.ds-layout-screen1 {
    @extend %purpleGradientBG;
    z-index: 1;
    padding-top: 53px;
    height: 100vh;
    .position-fixed {
        top: 15vh;
        z-index: 2;
    }

    %fromend {
        border-image: linear-gradient(to top, #ffffff, rgba(0, 0, 0, 0)) 1 100%;
    }
    
    %noend {
        border-image: linear-gradient(to top, rgba(255, 255, 255, 0) 20%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0) 80%);
    }
    
    @mixin gridFill($n, $fill, $ebol, $h, $bbol) {
        .ds-layout-grid:nth-child(#{$n}) {
            background: linear-gradient($fill);
            @if $ebol {
                .ds-grid-border {
                    height: $h;
                    @extend  %fromend;
                }
            }
        }
    }
    
    @include gridFill(1, (to bottom, rgba(255, 255, 255, 0) 30%, rgba(255, 255, 255, 0.1) 75%, rgba(255, 255, 255, 0) 100%), true, 54%, true);
    @include gridFill(2, (to bottom, rgba(255, 255, 255, 0) 20%, rgba(255, 255, 255, 0.1) 75%, rgba(255, 255, 255, 0) 100%), true, 64%, true);
    @include gridFill(3, (to bottom, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.1) 20%, rgba(255, 255, 255, 0) 30%, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.1) 80%, rgba(255, 255, 255, 0) 100%), true, 30%, true);
    @include gridFill(4, (to bottom, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.05) 20%, rgba(255, 255, 255, 0) 30%, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.05) 80%, rgba(255, 255, 255, 0) 100%), false, 0%, false);
    @include gridFill(5, (to bottom, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.1) 20%, rgba(255, 255, 255, 0) 30%, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.1) 80%, rgba(255, 255, 255, 0) 100%), false, 0%, false);
    @include gridFill(6, (to bottom, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.05) 10%, rgba(255, 255, 255, 0) 20%, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.05) 80%, rgba(255, 255, 255, 0) 100%), false, 0%, false);
    @include gridFill(7, (to bottom, rgba(255, 255, 255, 0) 5%, rgba(255, 255, 255, 0.1) 20%, rgba(255, 255, 255, 0) 25%, rgba(255, 255, 255, 0) 40%, rgba(255, 255, 255, 0.1) 60%, rgba(255, 255, 255, 0) 80%), false, 0%, false);
    @include gridFill(8, (to bottom, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.1) 20%, rgba(255, 255, 255, 0) 30%, rgba(255, 255, 255, 0) 40%, rgba(255, 255, 255, 0.1) 60%, rgba(255, 255, 255, 0) 80%), false, 0%, false);
    @include gridFill(9, (to bottom, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.05) 20%, rgba(255, 255, 255, 0) 30%, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.05) 80%, rgba(255, 255, 255, 0) 100%), false, 0%, false);
    @include gridFill(10, (to bottom, rgba(255, 255, 255, 0) 5%, rgba(255, 255, 255, 0.1) 20%, rgba(255, 255, 255, 0) 25%, rgba(255, 255, 255, 0) 40%, rgba(255, 255, 255, 0.1) 60%, rgba(255, 255, 255, 0) 80%), false, 0%, false);
    @include gridFill(11, (to bottom, rgba(255, 255, 255, 0) 30%, rgba(255, 255, 255, 0.03) 50%, rgba(255, 255, 255, 0) 80%), false, 0%, false);
    @include gridFill(12, (to bottom, rgba(255, 255, 255, 0) 30%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0) 80%), false, 0%, false);
}

.ds-layout-screen2 {
    background-color: $pe-color-white-gray;
    height: calc(100vh - 53px);
    //z-index: 3;
    top: 100vh;
    .position-absolute {
        top: 0;
    }

    %gradientBorderBottom {
        border-image: linear-gradient(to bottom, $ds-dark-purple, rgba(0, 0, 0, 0)) 1 100%;
    }
    %gradientBorderTop {
        border-image: linear-gradient(to top, $ds-dark-purple, rgba(0, 0, 0, 0)) 1 100%;
    }

    @mixin topBottom($bol) {
        @if $bol {
            @extend %gradientBorderTop;
        } @else {
            @extend %gradientBorderBottom;
        }
    }
    @mixin gridBorder($n, $h1, $h2, $bol) {
        .ds-layout-grid:nth-child(#{$n}) {
            height: $h1;
            @include topBottom($bol);
            @if $h2 {
                &>div {
                    height: $h2;
                    @include topBottom($bol);
                }
            }
        }
    }

    @include gridBorder(1, 40%, 90%, false);
    @include gridBorder(2, 80%, 80%, false);
    @include gridBorder(3, 10%, false, false);
    @include gridBorder(4, 8%, false, false);
    @include gridBorder(6, 18%, 80%, true);
    @include gridBorder(7, 16%, 60%, true);
    @include gridBorder(8, 20%, 80%, true);

    .ds-layout-grid:nth-child(4) {
        @include colse(6, 7);
    }

    .ds-layout-grid:nth-child(5) {
        .ds-grid-border {
            height: 18%; 
            @extend %gradientBorderBottom;
       }
       .ds-grid-borderL {
           height: 18%; 
           @extend %gradientBorderTop;
           .ds-grid-borderR {
            height: 70%; 
            @extend %gradientBorderTop;
       }
      }
    }

    .ds-layout-grid:nth-child(9), .ds-layout-grid:nth-child(10) {
        height: 100%; 
        border-color: $ds-dark-purple;
    }

    .ds-center-main {
        margin-top: 260px;
    }
}

.ds-layout-screen3 {
    height: calc(100vh - 53px);
    //z-index: 4;
    top: 100vh;
    .position-absolute {
        top: 0;
    }
    background-color: $pe-color-white;
    .ds-layout-grid {
        @extend .ds-grid-border;
        border-color: $pe-color-alto;
        height: 0;
    }

    .ds-whsp-grid {
        box-sizing: border-box;
        display: grid;
        grid-template-columns: repeat(11, 1fr 36px) 1fr;
        @mixin colGap($bp, $gap) {
            @media(max-width: $bp) {
                grid-template-columns: repeat(11, 1fr $gap) 1fr;;
            }
        }
        @include colGap(1024px, 20px);
        @include colGap(768px, 12px);
        @include colGap(480px, 8px);
        .ds-whsp-content { 
            @include colse(5, 20);
            margin: 200px 0 80px 0;
        }

        .ds-demo-rect {
            background-color: rgba(245, 245, 245, 0.5);
            border: 1px solid $pe-color-medium-gray;
        }

        .ds-whsp-rect {
            height: 376px;
            margin-bottom: 100px;
            &:nth-child(2) {
                @include colse(5, 11);
            }
            &:nth-child(3) {
                @include colse(11, 14);
            }
            &:last-child {
                @include colse(14, 20);
            }
        }
    }
}

.ds-layout-screen4 {
    //z-index: 5;
    .position-absolute {
        top: 0; 
    }
    height: calc(100vh - 53px);
    @extend %purpleGradientBG;
    .ds-layout-grid {
       background-color: rgba(0, 0, 0, .1);
        &:first-child{
            @include colse(3, 4);
        }
    }

    .ds-center-main {
        margin: 200px 0 50px 0;
    }

    .ds-demo-rect {
        background-color: rgba(255, 255, 255, 0.5);
    }

    .ds-rect1{
        @include colse(3, 6); 
    }
    .d-flex {
        @include colse(6, 8); 
        height: 258px;
    }
    .ds-rect3{
        @include colse(8, 11); 
    }
}

.ds-layout-screen5 {
    background-color: $pe-color-white-gray;
    height: calc(100vh - 53px);
    h3 {
        margin-top: 80px;
    }

    .img-center {
        display: block;
        margin: 0 auto; 
    }

    .ds-bp-table {
        background-color: $pe-color-white;
        box-shadow: 0 2px 4px rgba(0, 0, 0, .2);
        padding: 32px 56px;
        th {
            font-weight: 400;
        }
        thead th {
            padding: 0 40px;
        }
        tbody tr th, tbody tr td {
            padding: 36px 40px;
        }
    }
}

.ds-layout-screen6 {
    background-color: $pe-color-white;
    height: calc(100vh - 53px);
    h3 {
        margin-top: 80px;
    }

    @mixin spacingDemo($i) {
        @for $n from 1 through 10 {
            div:nth-child(#{$n}) {
                width: $n * $i + 0px;
                height: $n * $i + 0px;
                &::after {
                    content: '#{$n * $i}';
                    position: relative;
                    top: $n * $i + $i + 0px;
                    left: 0.5 * $n * $i - 0.5 * $i - 1px;
                }
            }
        }
    }
    .ds-spacing-demo8 {
        @include spacingDemo(8);
        div {
            background-color: $ds-purple;
        }
    }
    .ds-spacing-demo4 {
        @include spacingDemo(4);
        div {
            background-color: $ds-blue;
        }
    }
}
