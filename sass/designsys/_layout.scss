@import "color-variables";
@import "utilities";

// .parallax-main {
//     position: relative;
//     top: 0;
//     left: 0;
//     height: 100vh;
//     overflow-x: hidden;
//     overflow-y: scroll;
// }
.ds-layout-page {
    .ds-grid-borderL {
        border-left-width: 1px;
        border-left-style: solid; 
    }

    .ds-grid-borderR {
        border-right-width: 1px;
        border-right-style: solid;
    }

    .ds-grid-border {
        @extend .ds-grid-borderR;
        @extend .ds-grid-borderL;
    }

    %purpleGradientBG {
        background: url('/public/theme_assets/ds-gradient-bg.svg') center center fixed;
        background-size: cover;
    }
 
    .ds-screen1 {
        @extend %purpleGradientBG;
        z-index: 1;
        padding-top: 53px;
        height: 100vh;
        box-sizing: border-box;
        .position-fixed {
            top: 15vh;
            z-index: 2;
        }

        .ds-main-small {
            @include colse(4, 10);
        }

        %fromend {
            border-image: linear-gradient(to top, #ffffff, rgba(0, 0, 0, 0)) 1 100%;
        }
        
        %noend {
            border-image: linear-gradient(to top, rgba(0, 0, 0, 0) 20%, rgba(255, 255, 255, .2) 50%, rgba(0, 0, 0, 0) 80%);
            border-image-slice: 1;
        }

        @mixin gridBorder($n, $h, $bbol) {
            .ds-layout-grid:nth-child(#{$n}) {
                .ds-grid-border {
                    height: $h;
                    @if $bbol {
                        @extend  %fromend;
                    } @else {
                        @extend  %noend;
                    }
                }
            }
        }

        @include gridBorder(1, 54%, true);
        @include gridBorder(2, 64%, true);
        @include gridBorder(3, 30%, true);
        @include gridBorder(5, 30%, false);
        @include gridBorder(10, 40%, false);
        @include gridBorder(12, 100%, false);

        .ds-layout-grid:nth-child(7) {
            border-image: linear-gradient(to top, rgba(0, 0, 0, 0) 20%, rgba(255, 255, 255, .2) 30%, rgba(0, 0, 0, 0) 40%, rgba(0, 0, 0, 0) 70%,rgba(255, 255, 255, .2) 80%, rgba(0, 0, 0, 0) 90%);
            border-image-slice: 1;
        }

        @mixin gridFill($n, $fill) {
            .ds-grid-fill#{$n} {
                background: linear-gradient($fill);
            }
        }

        @include gridFill(1, (to bottom, rgba(255, 255, 255, 0) 30%, rgba(255, 255, 255, 0.1) 75%, rgba(255, 255, 255, 0) 100%));
        @include gridFill(2, (to bottom, rgba(255, 255, 255, 0) 20%, rgba(255, 255, 255, 0.1) 75%, rgba(255, 255, 255, 0) 100%));
        @include gridFill(3, (to bottom, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.1) 20%, rgba(255, 255, 255, 0) 30%, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.1) 80%, rgba(255, 255, 255, 0) 100%));
        @include gridFill(4, (to bottom, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.05) 20%, rgba(255, 255, 255, 0) 30%, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.05) 80%, rgba(255, 255, 255, 0) 100%));
        @include gridFill(5, (to bottom, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.1) 20%, rgba(255, 255, 255, 0) 30%, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.1) 80%, rgba(255, 255, 255, 0) 100%));
        @include gridFill(6, (to bottom, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.05) 10%, rgba(255, 255, 255, 0) 20%, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.05) 80%, rgba(255, 255, 255, 0) 100%));
        @include gridFill(7, (to bottom, rgba(255, 255, 255, 0) 5%, rgba(255, 255, 255, 0.1) 20%, rgba(255, 255, 255, 0) 25%, rgba(255, 255, 255, 0) 40%, rgba(255, 255, 255, 0.1) 60%, rgba(255, 255, 255, 0) 80%));
        @include gridFill(8, (to bottom, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.1) 20%, rgba(255, 255, 255, 0) 30%, rgba(255, 255, 255, 0) 40%, rgba(255, 255, 255, 0.1) 60%, rgba(255, 255, 255, 0) 80%));
        @include gridFill(9, (to bottom, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.05) 20%, rgba(255, 255, 255, 0) 30%, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.05) 80%, rgba(255, 255, 255, 0) 100%));
        @include gridFill(10, (to bottom, rgba(255, 255, 255, 0) 5%, rgba(255, 255, 255, 0.1) 20%, rgba(255, 255, 255, 0) 25%, rgba(255, 255, 255, 0) 40%, rgba(255, 255, 255, 0.1) 60%, rgba(255, 255, 255, 0) 80%));
        @include gridFill(11, (to bottom, rgba(255, 255, 255, 0) 30%, rgba(255, 255, 255, 0.03) 50%, rgba(255, 255, 255, 0) 80%));
        @include gridFill(12, (to bottom, rgba(255, 255, 255, 0) 30%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0) 80%));
    }

    .ds-screen2 {
        height: calc(100vh - 53px);
        z-index: 2;
        .position-absolute {
            top: 0;
        }

        %gradientBorderBottom {
            border-image: linear-gradient(to bottom, $ds-dark-purple, rgba(0, 0, 0, 0)) 1 100%;
        }
        %gradientBorderTop {
            border-image: linear-gradient(to top, $ds-dark-purple, rgba(0, 0, 0, 0)) 1 100%;
        }

        @mixin topBottom($bol) {
            @if $bol {
                @extend %gradientBorderTop;
            } @else {
                @extend %gradientBorderBottom;
            }
        }
        @mixin gridBorder($n, $h1, $h2, $bol) {
            .ds-layout-grid:nth-child(#{$n}) {
                height: $h1;
                @include topBottom($bol);
                @if $h2 {
                    &>div {
                        height: $h2;
                        @include topBottom($bol);
                    }
                }
            }
        }

        @include gridBorder(1, 40%, false, false);
        @include gridBorder(2, 80%, 80%, false);
        @include gridBorder(3, 10%, false, false);
        @include gridBorder(4, 8%, false, false);
        @include gridBorder(6, 15%, 80%, true);
        @include gridBorder(7, 16%, 60%, true);
        @include gridBorder(8, 20%, 80%, true);

        .ds-layout-grid:nth-child(4) {
            @include colse(6, 7);
        }

        .ds-layout-grid:nth-child(5) {
            border-image: linear-gradient(to bottom, $ds-dark-purple 0%, rgba(0, 0, 0, 0) 20%, rgba(0, 0, 0, 0) 80%, $ds-dark-purple 100%);
            border-image-slice: 1;
        .ds-grid-borderR {
            border-image: linear-gradient(to bottom, $ds-dark-purple 0%, rgba(0, 0, 0, 0) 20%, rgba(0, 0, 0, 0) 90%, $ds-dark-purple 100%);
            border-image-slice: 1;
            }
        }

        .ds-layout-grid:nth-child(9), .ds-layout-grid:nth-child(10) {
            height: 100%; 
            border-color: $ds-dark-purple;
        }

        .ds-main {
            margin-top: 260px;
        }
    }

    .ds-screen3 {
        min-height: 100vh;
        z-index: 2;
        .position-absolute {
            top: 0;
        }
        .ds-layout-grid {
            @extend .ds-grid-border;
            border-color: $pe-color-alto;
            height: 0;
        }

        .ds-whsp-grid {
            box-sizing: border-box;
            display: grid;
            @mixin colSet($bp, $colSum, $col, $gap) {
                @media(min-width: $bp) {
                    grid-template-columns: repeat($colSum - 1, $col $gap) $col;
                }
            }
            @include colSet(319px, 4, 56px, 16px);
            @include colSet(367px, 4, 72px, 16px);
            @include colSet(447px, 4, 92px, 16px);
            @include colSet(591px, 8, 56px, 16px);
            @include colSet(727px, 8, 64px, 24px);
            @include colSet(887px, 12, 48px, 24px);
            @include colSet(983px, 12, 56px, 24px);
            @include colSet(1079px, 12, 64px, 24px);
            @include colSet(1175px, 12, 72px, 24px); 

            .ds-whsp-content { 
                @include colse(5, 20);
                margin: 200px 0 80px 0;
            }

            .ds-demo-rect {
                background-color: rgba(245, 245, 245, 0.5);
                border: 1px solid $pe-color-medium-gray;
            }

            .ds-whsp-rect {
                height: 376px;
                margin-bottom: 100px;
                &:nth-child(2) {
                    @include colse(5, 11);
                }
                &:nth-child(3) {
                    @include colse(11, 14);
                }
                &:last-child {
                    @include colse(14, 20);
                }
            }
        }
    }

    .ds-screen4 {
        z-index: 2;
        .position-absolute {
            top: 0; 
        }

        .ds-fixgrid-video {
            height: 210px;
            background-color: $pe-color-alto;
        }

        .img-center {
            display: block;
            margin: 0 auto; 
        }

        .ds-bp-table {
            thead th:not(:first-child) {
                width: 96px;
            }
            button {
                background-color: transparent;
                border: 0;
            }
        }
    }

    .ds-screen5 {
        z-index: 2;

        @mixin spacingDemo($i, $list) {
            @each $m, $n in $list {
                div:nth-child(#{$m}) {
                    width: $n * $i + 0px;
                    height: $n * $i + 0px;
                    &::after {
                        content: '#{$n * $i}';
                        position: relative;
                        top: $n * $i + $i + 0px;
                        left: 0.5 * $n * $i - 0.5 * $i - 1px;
                    }
                }
            }
        }
        $spacing8: (1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, 10: 10);
        $spacing4: (1: 1, 2: 3, 3: 5, 4: 7, 5: 9);
        .ds-spacing-demo8 {
            @include spacingDemo(8, $spacing8);
            div {
                background-color: $ds-purple;
            }
        }
        .ds-spacing-demo4 {
            @include spacingDemo(4, $spacing4);
            div {
                background-color: $ds-blue;
            }
        }
    }

    .ds-screen6 {
        z-index: 2;
        figure {
            margin: 0;
        }
    }

    .ds-screen7 {
        z-index: 2;
    }
}